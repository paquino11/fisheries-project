module Fishery.Stakeholders.Client.Role where

import DA.Optional qualified as O
import Fishery.Stakeholders.Batch.Model qualified as BatchModel

template Role
  with
    operator : Party
    provider : Party
    customer : Party
  where
    signatory operator, provider, customer

    key (operator, provider, customer) : (Party, Party, Party)
    maintainer key._1

    nonconsuming choice RequestBatch : (ContractId BatchModel.BatchRequest)
      with
        name : Text
        producer : Party
        death_date : Date
        arrive_date : Date
        arrive_temperature : Int
        arrive_local : Text
      controller customer
        do
          optionalCid <- lookupByKey @BatchModel.OfferedBatch(operator, provider, producer, name)
          assertMsg "O Lote que procura nÃ£o existe" (O.isSome optionalCid)
          create BatchModel.BatchRequest with ..

  
    nonconsuming choice PayFishPackage : ContractId BatchModel.PayPackage
      with
        producer : Party
        client : Party
        package_price : Int
        package_name : Text
        arrive_local : Text
        money_on_wallet : Int
      controller customer
        do
          optionalBatchModelId <- lookupByKey @BatchModel.TransportedBatch (operator, provider, producer, package_name, arrive_local) --verificar se existe lote
          assert (O.isSome optionalBatchModelId)
          create BatchModel.PayPackage with ..

    
    choice Terminate : ()
        with
            ctrl : Party 
        controller ctrl
            do
                assertMsg 
                    ("ctrl " <> show ctrl <> "is not a party allowed to do this action")
                    (ctrl == provider || ctrl == customer)
                return ()

template Offer
  with
    operator : Party
    provider : Party
    customer : Party
  where
    signatory operator, provider
    observer customer

    choice Accept : ContractId Role
        controller customer
            do
                create Role with ..
    
    choice Decline : ()
        controller customer
            do
                pure ()